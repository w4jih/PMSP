// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employer {
  id      Int    @id @default(autoincrement())
  name    String
  company String
}

model Conducteur{
  id      Int    @id @default(autoincrement())
  name    String 
  lastname String
  Cin     String
  email   String   @unique
  password String
  kmprice Float
  vehicule   Vehicule? 
}

model Passager{
  id      Int   @id @default(autoincrement())
  name    String 
  lastname String 
  Cin      String
  email    String   @unique
  password  String
  reservations Reservation[]
}

model Admin{
  id      Int   @id @default(autoincrement())
  name     String
  password  String
  kmprice   Float
}


model Vehicule {
  id            Int          @id @default(autoincrement())
  name          String
  type          String
  available     Boolean      @default(true)
  reservations  Reservation[]
  conducteurId    Int   @unique
  conducteur Conducteur   @relation(fields: [conducteurId], references: [id])
}

model Reservation {
  id         Int      @id @default(autoincrement())
  user       Passager     @relation(fields: [userId], references: [id])
  userId     Int
  vehicle    Vehicule  @relation(fields: [vehicleId], references: [id])
  vehicleId  Int
  trajectory Trajectory @relation(fields: [trajectoryId], references: [id])
  trajectoryId Int
  startTime  DateTime
  endTime    DateTime
  status     String   @default("confirmed") // or "cancelled"
  paymentIntent PaymentIntent?
}


model Trajectory {
  id          Int           @id @default(autoincrement())
  source      String
  destination String
  distanceKm  Float?        // optional: estimated distance
  durationMin Int?          // optional: estimated time
  price       Float?
  reservations Reservation[]
}


model PaymentIntent{
  id             Int        @id @default(autoincrement())
  stripeId       String     @unique // Stripe's PaymentIntent ID
  amount         Int        // Amount in cents (e.g., $10 = 1000)
  currency       String     @default("usd")
  status         String     @default("pending") // pending, succeeded, failed, etc.
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  reservation    Reservation @relation(fields: [reservationId], references: [id])
  reservationId  Int        @unique
}

