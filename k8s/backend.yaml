apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: psmp
spec:
  replicas: 1
  selector:
    matchLabels: { app: backend }
  template:
    metadata:
      labels: { app: backend }
    spec:
      initContainers:
        - name: wait-for-postgres
          image: alpine:3.20
          command: ["sh","-c","until nc -z postgres.psmp.svc.cluster.local 5432; do echo waiting for postgres; sleep 2; done"]
        - name: prisma-migrate
          image: psmp-backend:latest
          imagePullPolicy: IfNotPresent   # <— important for Minikube
          command: ["sh", "-c", "npx prisma migrate deploy"]
          envFrom:
            - secretRef:
                name: backend-secrets
      containers:
        - name: backend
          image: psmp-backend:latest
          imagePullPolicy: IfNotPresent   # <— important for Minikube
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: backend-secrets
          # Prefer a dedicated health endpoint; change if yours is different
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 5
          # (Optional) if your app needs time to start compiling
          startupProbe:
            httpGet:
              path: /api/health
              port: 3000
            failureThreshold: 30
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: psmp
spec:
  selector:
    app: backend
  type: NodePort
  ports:
    - name: http 
    - port: 3000
      targetPort: 3000
      nodePort: 30080
